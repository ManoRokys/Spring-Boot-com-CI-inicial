# Nome do workflow (aparecerá no dashboard do GitHub Actions)
name: Java CI com Maven

# Eventos que disparam este workflow
on:
  push:
    branches: ["main"] # Executa sempre que houver um push na branch 'main'
    paths-ignore:
      - 'README.md'       # Ignora mudanças apenas no README
      - 'docs/**'         # Ignora qualquer arquivo dentro da pasta 'docs'
      - 'LICENSE'         # Ignora o arquivo de licença
      - 'CONTRIBUTING.md' # Ignora o guia de contribuição
  pull_request:
    branches: ["main"] # Executa sempre que um Pull Request for aberto para a branch 'main'
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'LICENSE'
      - 'CONTRIBUTING.md'

# Tarefas (jobs) que serão executadas
jobs:

  # ==============================
  # Job de CI (Integração Contínua)
  # ==============================
  build:
    name: Build (CI)
    runs-on: ubuntu-latest # Máquina virtual Ubuntu mais recente

    steps:
      # 1️⃣ Clona o repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2️⃣ Configura o ambiente Java
      - name: Configurar JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin' # OpenJDK via Eclipse Temurin

      # 3️⃣ Compila e executa os testes
      - name: Build e Testes com Maven
        run: mvn -B package --file pom.xml # O comando 'package' compila e roda os testes

      # 4️⃣ Salva o artefato gerado (arquivo .jar)
      - name: Upload do Artefato
        uses: actions/upload-artifact@v4
        with:
          name: api-demo-jar # Nome do artefato
          path: target/*.jar # Caminho do arquivo .jar gerado
